cmake_minimum_required(VERSION 3.15)
project(BarbariaCLion)
include_directories(game)
include_directories(engine)
set(CMAKE_CXX_STANDARD 17)
find_package(PythonLibs 3 REQUIRED)
add_compile_options("-lGL -lGLEW -lglfw -ldl -lpython3.7m")
link_libraries("-lGL -lGLEW -lglfw -ldl -lpython3.7m")
add_executable(BarbariaCLion main.cpp api/python/python.cpp api/python/python.h api/java/java.cpp api/java/java.h api/lua/lua.cpp api/lua/lua.h engine/graphics/model.cpp engine/graphics/model.h engine/core/buffers.cpp engine/core/buffers.h engine/lightning/ambient.cpp engine/lightning/ambient.h engine/lightning/source.cpp engine/lightning/source.h engine/lightning/diffuse.cpp engine/lightning/diffuse.h engine/lightning/specular.cpp engine/lightning/specular.h engine/networking/client.cpp engine/networking/client.h engine/networking/server.cpp engine/networking/server.h engine/core/shader.cpp engine/core/shader.h game/loading/pre.cpp game/loading/pre.h game/loading/loop.cpp game/loading/loop.h game/loading/post.cpp game/loading/post.h game/gui/mainscreen.cpp game/gui/mainscreen.h game/gui/inventory.cpp game/gui/inventory.h game/world/world.cpp game/world/world.h game/world/chunk.cpp game/world/chunk.h game/world/block.cpp game/world/block.h game/entity/mob.cpp game/entity/mob.h game/entity/player.cpp game/entity/player.h engine/core/camera.cpp engine/core/camera.h api/loader.cpp api/loader.h game/utils/controls.cpp game/utils/controls.h game/utils/declarations.cpp game/utils/declarations.h game/game.cpp game/game.h)
